#BlueJ class context
comment0.target=Gallery
comment0.text=\r\n\ Let\ me\ create\ a\ galery\r\n\r\n\ @author\ Sebastian\ Zamora\r\n\ @author\ Johann\ Amaya\r\n\ @version\ 1.3\r\n
comment1.params=length\ width
comment1.target=Gallery(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Galery.\r\n\ \r\n\ @param\ length\ The\ length\ of\ the\ galery.\r\n\ @param\ width\ \ The\ width\ of\ the\ galery.\r\n
comment10.params=room\ on
comment10.target=void\ alarm(java.lang.String,\ boolean)
comment10.text=\r\n\ Let's\ create\ the\ room's\ alarm.\r\n\ \r\n\ @param\ room\ The\ name\ of\ the\ room.\r\n\ @param\ on\ \ \ The\ alarm\ state.\r\n
comment11.params=
comment11.target=void\ steal()
comment11.text=\r\n\ Steal\ the\ room's\ sculpture\ if\ the\ guard\ doesn't\ see\ it.\r\n
comment12.params=
comment12.target=java.lang.String[]\ rooms()
comment12.text=\r\n\ \r\n\ Returns\ an\ array\ of\ strings\ containing\ the\ names\ of\ all\ the\ rooms\ in\ the\r\n\ house.\r\n\ The\ rooms\ are\ sorted\ alphabetically.\r\n\ \r\n\ @return\ an\ array\ of\ strings\ with\ the\ names\ of\ all\ the\ rooms\ in\ the\ house\r\n
comment13.params=
comment13.target=java.lang.String[]\ roomsOnAlert()
comment13.text=\r\n\ Returns\ an\ array\ of\ the\ names\ of\ the\ rooms\ that\ currently\ have\ the\ alarm\r\n\ turned\ off.\r\n\ \r\n\ @return\ an\ array\ of\ the\ names\ of\ the\ rooms\ that\ currently\ have\ the\ alarm\r\n\ \ \ \ \ \ \ \ \ turned\ off\r\n
comment14.params=room
comment14.target=int[]\ guardLocation(java.lang.String)
comment14.text=\r\n\ Returns\ the\ location\ of\ the\ guard\ in\ the\ specified\ room.\ If\ the\ room\ exists\r\n\ in\ the\ gallery.\r\n\r\n\ @param\ room\ The\ room\ to\ look\ for\ the\ guard\ in.\r\n\ @return\ An\ array\ with\ two\ integers\ representing\ the\ x\ and\ y\ coordinates\ of\r\n\ \ \ \ \ \ \ \ \ the\ guard.\r\n
comment15.params=room
comment15.target=int[]\ sculptureLocation(java.lang.String)
comment15.text=\r\n\ Returns\ the\ location\ of\ the\ sculpture\ in\ the\ specified\ room.\r\n\ \r\n\ @param\ room\ the\ name\ of\ the\ room\ where\ the\ sculpture\ is\ located.\r\n\ @return\ an\ integer\ array\ representing\ the\ (x,\ y)\ coordinates\ of\ the\r\n\ \ \ \ \ \ \ \ \ sculpture.\r\n
comment16.params=room
comment16.target=float\ distanceTraveled(java.lang.String)
comment16.text=\r\n\ \r\n\ Returns\ the\ total\ distance\ traveled\ by\ the\ guard\ in\ the\ specified\ room.\r\n\ \r\n\ @param\ room\ the\ name\ of\ the\ room\ where\ the\ distance\ is\ being\ calculated.\r\n\ @return\ the\ total\ distance\ traveled\ by\ the\ guard\ in\ the\ specified\ room.\r\n
comment17.params=room
comment17.target=boolean\ sculpturePresent(java.lang.String)
comment17.text=\r\n\ Checks\ whether\ there\ is\ a\ sculpture\ in\ the\ specified\ room.\r\n\r\n\ @param\ room\ the\ name\ of\ the\ room\ to\ check\r\n\ @return\ true\ if\ the\ room\ has\ a\ sculpture,\ false\ otherwise\r\n\ @throws\ GalleryException\ if\ the\ specified\ room\ does\ not\ exist\r\n
comment18.params=
comment18.target=java.lang.String[]\ roomsWithFalseAlarm()
comment18.text=\r\n\ validate\ if\ the\ alarm\ was\ activated\ without\ having\ stolen\ the\ sculpture\r\n
comment19.params=
comment19.target=void\ makeVisible()
comment19.text=\r\n\ Returns\ an\ array\ with\ the\ names\ of\ all\ the\ rooms\ in\ the\ gallery\ that\ have\ had\r\n\ a\ false\ alarm\ triggered.\r\n\r\n\ @return\ String[]\ -\ Array\ with\ the\ names\ of\ all\ the\ rooms\ with\ a\ false\ alarm.\r\n
comment2.params=polygon\ guard\ sculpture
comment2.target=Gallery(int[][],\ int[],\ int[])
comment2.text=\r\n\ Let\ me\ create\ a\ gallery\ whit\ the\ indiations\ of\ the\ problem\r\n\ \r\n\ @param\ polygon\ \ \ Is\ a\ matrix\ with\ all\ vertices\ of\ the\ room\r\n\ @param\ guard\ \ \ \ \ Is\ the\ positions\ of\ the\ guard.\r\n\ @param\ sculpture\ Is\ the\ positions\ of\ the\ sculpture\r\n
comment20.params=
comment20.target=void\ makeInvisible()
comment20.text=\r\n\ Let\ me\ make\ visible\ the\ rooms\ on\ the\ gallery\r\n
comment21.params=polygon
comment21.target=void\ intersect(int[][])
comment21.text=\r\n\ \r\n\ Checks\ if\ the\ given\ polygon\ intersects\ with\ any\ of\ the\ rooms\ in\ the\ gallery.\r\n\ Throws\ a\ GalleryException\ with\ code\ "IntersectRoom"\ if\ an\ intersection\ is\r\n\ found.\r\n\ \r\n\ @param\ polygon\ a\ 2D\ array\ representing\ the\ vertices\ of\ the\ polygon\ to\ check\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ intersection.\r\n
comment22.params=
comment22.target=boolean\ ok()
comment22.text=\r\n\ \r\n\ Returns\ an\ array\ of\ Strings\ with\ the\ names\ of\ all\ the\ rooms\ in\ the\ gallery.\r\n\ The\ array\ is\ sorted\ in\ lexicographical\ order.\r\n\ \r\n\ @return\ an\ array\ of\ Strings\ with\ the\ names\ of\ all\ the\ rooms\ in\ the\ gallery\r\n
comment23.params=
comment23.target=void\ finish()
comment23.text=\r\n\ Finish\ the\ simulator\r\n
comment3.params=color\ polygon
comment3.target=void\ buildRoom(java.lang.String,\ int[][])
comment3.text=\r\n\ Let\ me\ create\ a\ room.\r\n\ \r\n\ @param\ color\ \ \ the\ color\ of\ the\ room's\ wall.\r\n\ @param\ polygon\ the\ position\ of\ the\ vertices\ of\ the\ polygon.\r\n\ @throws\ GalleryException\r\n
comment4.params=type\ color\ polygon
comment4.target=void\ buildRoom(java.lang.String,\ java.lang.String,\ int[][])
comment4.text=\r\n\ Let\ me\ create\ diferent\ types\ of\ rooms\r\n\ \r\n\ @param\ type\ \ \ \ the\ type\ of\ the\ room.\r\n\ @param\ color\ \ \ the\ color\ of\ the\ room's\ wall.\r\n\ @param\ polygon\ the\ position\ of\ the\ vertices\ of\ the\ polygon.\r\n\ @throws\ GalleryException\r\n
comment5.params=room\ x\ y
comment5.target=void\ displaySculpture(java.lang.String,\ int,\ int)
comment5.text=\r\n\ Let\ me\ put\ a\ sculpture\ in\ a\ room.\r\n\ \r\n\ @param\ room\ the\ color\ of\ the\ room.\r\n\ @param\ x\ \ \ \ the\ x's\ position\ of\ the\ sculpture.\r\n\ @param\ y\ \ \ \ the\ y's\ position\ of\ the\ sculpture.\r\n
comment6.params=type\ room\ x\ y
comment6.target=void\ displaySculpture(java.lang.String,\ java.lang.String,\ int,\ int)
comment6.text=\r\n\ Let\ me\ put\ a\ specific\ type\ of\ sculpture\ in\ a\ room.\r\n\ \r\n\ @param\ room\ the\ color\ of\ the\ room.\r\n\ @param\ x\ \ \ \ the\ x's\ position\ of\ the\ sculpture.\r\n\ @param\ y\ \ \ \ the\ y's\ position\ of\ the\ sculpture.\r\n
comment7.params=room
comment7.target=void\ arriveGuard(java.lang.String)
comment7.text=\r\n\ Let\ me\ create\ a\ guard\ in\ a\ specific\ room.\r\n\ \r\n\ @param\ room\ The\ name\ of\ the\ room.\r\n
comment8.params=type\ room
comment8.target=void\ arriveGuard(java.lang.String,\ java.lang.String)
comment8.text=\r\n\ Let\ me\ create\ a\ specigic\ type\ of\ guard\ in\ a\ specific\ room.\r\n\ \r\n\ @param\ room\ The\ name\ of\ the\ room.\r\n
comment9.params=room\ x\ y
comment9.target=void\ moveGuard(java.lang.String,\ int,\ int)
comment9.text=\r\n\ Let\ me\ move\ a\ guard\ inside\ of\ the\ room.\r\n\ \r\n\ @param\ room\ The\ name\ of\ the\ room.\r\n\ @param\ x\ \ \ \ The\ coorden\ x.\r\n\ @param\ y\ \ \ \ The\ coorden\ y.\r\n
numComments=24
