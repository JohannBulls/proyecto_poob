#BlueJ class context
comment0.target=GalleryTest
comment0.text=\r\n\ The\ test\ class\ GalleryTest.\r\n\ @author\ Sebastian\ Zamora\r\n\ @author\ Johann\ Amaya\r\n\ @version\ 1.2\r\n
comment1.params=
comment1.target=void\ testBuildRoom()
comment1.text=\r\n\ crea\ una\ galer\u00EDa\ y\ agrega\ una\ habitaci\u00F3n\ con\ un\ conjunto\ de\ v\u00E9rtices\ dados.\ \r\n\ Luego,\ verifica\ si\ la\ habitaci\u00F3n\ ha\ sido\ agregada\ correctamente\ y\ si\ tiene\ el\ nombre\ correcto.\r\n
comment10.params=
comment10.target=void\ testMoveGuardToNonExistingRoom()
comment11.params=
comment11.target=void\ testMoveGuardOutsideRoom()
comment12.params=
comment12.target=void\ testMoveGuardWithNoGuard()
comment13.params=
comment13.target=void\ ShoudHaveRoomsWithAlarms()
comment14.params=
comment14.target=void\ shouldNotStealTheSculptureIfTheGuardSeeIt()
comment2.params=
comment2.target=void\ testBuildRoomWithExistingRoom()
comment2.text=\r\n\ crea\ una\ galer\u00EDa\ y\ agrega\ una\ habitaci\u00F3n\ con\ un\ conjunto\ de\ v\u00E9rtices\ dados.\ \r\n\ Luego,\ intenta\ agregar\ una\ segunda\ habitaci\u00F3n\ con\ el\ mismo\ nombre,\ lo\ que\ deber\u00EDa\ arrojar\ una\ excepci\u00F3n\ \r\n\ GalleryExecption\ porque\ el\ nombre\ ya\ est\u00E1\ siendo\ utilizado.\ El\ test\ verifica\ si\ se\ produce\ la\ excepci\u00F3n\ y\ si\ su\ mensaje\ es\ el\ esperado.\r\n
comment3.params=
comment3.target=void\ testBuildRoomAfterDisplayingSculpture()
comment3.text=\r\n\ crea\ una\ galer\u00EDa\ y\ muestra\ una\ escultura\ en\ una\ habitaci\u00F3n\ que\ a\u00FAn\ no\ existe.\ \r\n\ Luego,\ intenta\ agregar\ una\ nueva\ habitaci\u00F3n,\ lo\ que\ deber\u00EDa\ arrojar\ una\ excepci\u00F3n\ GalleryExecption\ porque\ \r\n\ no\ se\ puede\ agregar\ una\ habitaci\u00F3n\ despu\u00E9s\ de\ mostrar\ una\ escultura.\ El\ test\ verifica\ si\ se\ produce\ la\ excepci\u00F3n\ y\ si\ su\ mensaje\ es\ el\ esperado.\ \ \ \r\n
comment4.params=
comment4.target=void\ shouldNotCreateSculptureInARoomThatHave()
comment5.params=
comment5.target=void\ testDisplaySculpture()
comment5.text=\r\n\ crea\ una\ galer\u00EDa,\ agrega\ una\ habitaci\u00F3n\ con\ un\ conjunto\ de\ v\u00E9rtices\ dados\ y\ muestra\ una\ escultura\ en\ esa\ habitaci\u00F3n.\ \r\n\ Luego,\ verifica\ si\ la\ galer\u00EDa\ est\u00E1\ en\ un\ estado\ "correcto",\ es\ decir,\ si\ no\ hay\ habitaciones\ vac\u00EDas\ ni\ esculturas\ superpuestas.\ \ \ \r\n
comment6.params=
comment6.target=void\ testDisplaySculptureInNonExistingRoom()
comment6.text=\r\n\ crea\ una\ galer\u00EDa\ y\ trata\ de\ mostrar\ una\ escultura\ en\ una\ habitaci\u00F3n\ que\ no\ existe,\ \r\n\ lo\ que\ deber\u00EDa\ arrojar\ una\ excepci\u00F3n\ GalleryExecption.\ El\ test\ verifica\ si\ se\ produce\ la\ excepci\u00F3n\ y\ si\ su\ mensaje\ es\ el\ esperado.\r\n
comment7.params=
comment7.target=void\ testArriveGuard()
comment7.text=\r\n\ crea\ una\ galer\u00EDa,\ agrega\ una\ habitaci\u00F3n\ con\ un\ conjunto\ de\ v\u00E9rtices\ dados\ \r\n\ y\ luego\ agrega\ un\ guardia\ a\ esa\ habitaci\u00F3n.\ Luego,\ verifica\ si\ la\ galer\u00EDa\ \r\n\ est\u00E1\ en\ un\ estado\ "correcto",\ es\ decir,\ si\ no\ hay\ habitaciones\ vac\u00EDas\ ni\ guardias\ en\ habitaciones\ vac\u00EDas.\r\n
comment8.params=
comment8.target=void\ testArriveGuardInNonExistingRoom()
comment8.text=\r\n\ crea\ una\ galer\u00EDa\ y\ trata\ de\ agregar\ un\ guardia\ en\ una\ habitaci\u00F3n\ que\ no\ existe,\ \r\n\ lo\ que\ deber\u00EDa\ arrojar\ una\ excepci\u00F3n\ GalleryExecption.\ El\ test\ verifica\ si\ se\ produce\r\n\ la\ excepci\u00F3n\ y\ si\ su\ mensaje\ es\ el\ esperado.\r\n
comment9.params=
comment9.target=void\ testMoveGuard()
comment9.text=\r\n\ este\ test\ no\ tiene\ cuerpo\ de\ prueba\ ya\ que\ a\u00FAn\ no\ se\ ha\ implementado\ la\ funcionalidad\ correspondiente.\r\n
numComments=15
